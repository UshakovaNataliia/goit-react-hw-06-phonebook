{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Form/alert.module.css","redux/contactList/contactListActionsTypes.js","components/Form/Form.jsx","redux/contactList/contactListActions.js","components/Form/index.js","components/ContactList/ContactList.jsx","components/ContactList/index.js","redux/filter/filterActionsTypes.js","components/Filter/Filter.jsx","redux/filter/filterActions.js","components/Filter/index.js","components/App/App.jsx","components/App/index.js","redux/store.js","redux/contactList/contactListReducer.js","redux/filter/filterReducer.js","index.js","components/Form/Form.module.css","components/App/App.module.css"],"names":["module","exports","ADD_CONTACT","DELETE_CONTACT","SET_CONTACTS","Form","state","name","number","alert","inputChange","e","target","value","setState","addContact","preventDefault","props","contacts","some","el","toLowerCase","setTimeout","onSubmit","this","CSSTransition","appear","in","timeout","classNames","alertStyles","unmountOnExit","className","styles","formStyles","form","label","input","type","onChange","required","button","Component","mapDispatchToProps","contact","payload","id","shortId","generate","connect","contactsReducer","onDelete","contactId","ContactList","toUpdate","filter","includes","TransitionGroup","component","contactListStyles","ul","map","li","span","onClick","FILTER_CONTACT","onFilter","Filter","filterStyles","App","parseContacts","JSON","parse","localStorage","getItem","setCont","prevProps","prevState","cont","setItem","stringify","title","length","dispatch","combineReducers","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcd20e78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__3Hlwu\",\"li\":\"ContactList_li__-28s1\",\"span\":\"ContactList_span__3XQLo\",\"button\":\"ContactList_button__1_8Vz\",\"enter\":\"ContactList_enter__2Ib2h\",\"enterActive\":\"ContactList_enterActive__1t1C3\",\"exit\":\"ContactList_exit__3NYjc\",\"exitActive\":\"ContactList_exitActive__2A3_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__p9iKJ\",\"input\":\"Filter_input__1csXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__yKqus\",\"enterActive\":\"alert_enterActive__3olUJ\",\"exit\":\"alert_exit__mjM8o\",\"exitActive\":\"alert_exitActive__2LTPN\"};","export const ADD_CONTACT = 'contact/add';\r\nexport const DELETE_CONTACT = 'contact/delete';\r\nexport const SET_CONTACTS = 'contact/set';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContactItem } from '../../redux/contactList/contactListActions';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport formStyles from './Form.module.css';\nimport alertStyles from './alert.module.css';\nimport styles from '../App/App.module.css';\n\nclass Form extends Component { \n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n  state = {\n    name: '',\n    number: '',\n    alert: false,\n  };\n  inputChange = e => {\n    const { name, value } = e.target; // свойства инпута (данные из консоли: name=\"number\" value={number})\n    this.setState({ [name]: value }); // (ключ: значение) связали введение данных в оба инпута со стейтом \n  };\n  addContact = e => {\n    e.preventDefault();\n    if (this.props.contacts.some(el => el.name === this.state.name || el.name.toLowerCase() === this.state.name)) {\n      this.setState({ alert: true });\n      setTimeout(() => {\n        this.setState({ alert: false });\n    this.setState({ name: '', number: '' });\n\n      }, 3000);\n    } else {\n    this.props.onSubmit(this.state); // прокинули пропсы для передачи данных в App\n    this.setState({ name: '', number: '' });\n    };\n  };\n\n  render() {\n    const { name, number, alert } = this.state;\n    return (\n      <>\n         <CSSTransition\n           appear={alert}\n           in={alert} \n           timeout={500}\n           classNames={alertStyles}\n           unmountOnExit\n         >\n          <p className={styles.alert}>Contact {name} already exists!</p>\n         </CSSTransition>\n        <form onSubmit={this.addContact} className={formStyles.form}>\n          <label className={formStyles.label}>\n            Name\n            <input\n              className={formStyles.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.inputChange}\n              required\n            />\n          </label>\n          <label className={formStyles.label}>\n            Number\n            <input\n              className={formStyles.input}\n              type=\"number\"\n              name=\"number\"\n              value={number}\n              onChange={this.inputChange}\n              required\n            />\n          </label>\n          <button type=\"submit\" className={formStyles.button}>Add contact <br /> {name}</button>\n      </form>\n      </>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contactsReducer.contacts\n});\n\nconst mapDispatchToProps = {\n  onSubmit: addContactItem\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\nForm.propTypes = {\n  state: PropTypes.object,\n};","import shortId from 'shortid';\r\nimport {ADD_CONTACT, DELETE_CONTACT, SET_CONTACTS} from './contactListActionsTypes'\r\n\r\nexport const addContactItem = contact => ({\r\n    type: ADD_CONTACT,\r\n    payload: {\r\n        alert: false,\r\n        contact: {\r\n            id: shortId.generate(),\r\n            name: contact.name,\r\n            number: contact.number,\r\n    }},\r\n});\r\n\r\nexport const deleteContact = contactId => ({\r\n    type: DELETE_CONTACT,\r\n    payload: {\r\n        contactId,\r\n    },\r\n});\r\n\r\nexport const setContacts = contacts => ({\r\n    type: SET_CONTACTS,\r\n    payload: {\r\n        contacts,\r\n    },\r\n}); ","import Form from './Form';\n\nexport default Form;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\nimport contactListStyles from './ContactList.module.css';\nimport { deleteContact } from '../../redux/contactList//contactListActions';\n\nconst ContactList = ({ toUpdate, onDelete }) => {\n  return (\n  <TransitionGroup component=\"ul\" className={contactListStyles.ul}>\n      {toUpdate.map(el => {\n        const { name, number, id } = el;\n        return (\n          <CSSTransition key={id} in timeout={250} unmountOnExit classNames={contactListStyles}>\n          <li  key={id} className={contactListStyles.li}>\n           <span className={contactListStyles.span}> {name}: {number}</span>\n            <button className={contactListStyles.button} type=\"button\" onClick={() => onDelete(id)}>\n              X\n            </button>\n          </li>\n          </CSSTransition>\n        );\n      })}\n  </TransitionGroup>\n  );\n};\n\nconst mapStateToProps = state => ({\n  toUpdate: state.contactsReducer.contacts.filter(contact => contact.name.toLowerCase().includes(state.contactsReducer.filter.toLowerCase())),\n});\n\nconst mapDispatchToProps = {\n  onDelete: deleteContact\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  toUpdate: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import ContactList from './ContactList';\n\nexport default ContactList;\n","export const FILTER_CONTACT = 'contact/filter';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {filterInput} from '../../redux/filter/filterActions';\r\nimport PropTypes from 'prop-types';\r\nimport filterStyles from './Filter.module.css';\r\n\r\nconst Filter = ({onFilter, filter}) => {\r\n  return (\r\n    <label className={filterStyles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={filterStyles.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={e=>onFilter(e.target.value)}\r\n        value={filter} />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contactsReducer.filter\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onFilter: filterInput\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func.isRequired,\r\n};","import { FILTER_CONTACT } from './filterActionsTypes';\r\n\r\nexport const filterInput = filter => ({\r\n    type: FILTER_CONTACT,\r\n    payload: {\r\n        filter,\r\n    }\r\n});","import Filter from './Filter';\n\nexport default Filter;\n","import React, { Component } from 'react';\r\nimport Form from '../Form';\r\nimport ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './App.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {setContacts} from '../../redux/contactList/contactListActions'\r\n\r\nclass App extends Component { \r\n  componentDidMount() {\r\n    const parseContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (parseContacts) {\r\n      this.props.setCont(parseContacts);\r\n    }\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.cont !== this.props.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.props.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n     return (\r\n       <>\r\n         <CSSTransition\r\n           appear={true}\r\n           in\r\n           timeout={500}\r\n           classNames={styles}\r\n           unmountOnExit>\r\n          <h1 className={styles.title}>Phonebook</h1>\r\n         </CSSTransition>\r\n\r\n          <Form/>\r\n          <h2>Contacts</h2>\r\n         <CSSTransition\r\n          in={this.props.contacts.length > 1}\r\n          timeout={250}\r\n          classNames={styles}\r\n          unmountOnExit\r\n         >\r\n           <Filter/>\r\n         </CSSTransition>\r\n          <ContactList/>\r\n       </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contactsReducer.contacts\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCont: (cont => dispatch(setContacts(cont)))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import App from './App.jsx';\n\nexport default App;\n","import { createStore, combineReducers } from 'redux';\r\nimport {contacts} from './contactList/contactListReducer';\r\nimport {filter} from './filter/filterReducer'\r\n\r\nconst contactsReducer = combineReducers({\r\n        contacts,\r\n        filter,\r\n});\r\nconst rootReducer = combineReducers({\r\n    contactsReducer: contactsReducer\r\n})\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport default store;","import {ADD_CONTACT, DELETE_CONTACT, SET_CONTACTS} from './contactListActionsTypes';\r\n\r\nexport const contacts = (state = [], {type, payload}) => {\r\n    switch (type) {\r\n        case ADD_CONTACT:\r\n            return [...state, payload.contact];\r\n        case DELETE_CONTACT:\r\n            return state.filter(contact => contact.id !== payload.contactId);\r\n        case SET_CONTACTS:\r\n            return [...state, ...payload.contacts];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import {FILTER_CONTACT} from './filterActionsTypes';\r\n\r\nexport const filter = (state = '', {type, payload}) => {\r\n    switch (type) {\r\n        case FILTER_CONTACT:\r\n            return payload.filter;\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1AgF-\",\"label\":\"Form_label__2ulR4\",\"input\":\"Form_input__1TubE\",\"button\":\"Form_button__1tzx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"App_enter__3F9jM\",\"enterActive\":\"App_enterActive__2GFOG\",\"exit\":\"App_exit__3_Jlu\",\"exitActive\":\"App_exitActive__Vle8h\",\"appear\":\"App_appear__2r7az\",\"appearActive\":\"App_appearActive__1amD_\",\"title\":\"App_title__2MsNz\",\"alert\":\"App_alert__3xphf\"};"],"sourceRoot":""}